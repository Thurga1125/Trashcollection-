{"ast":null,"code":"var _jsxFileName = \"/Users/thurgarajinathan/Documents/Trashcollection/src/components/NotificationToast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationToast = ({\n  message,\n  type = 'info',\n  duration = 5000,\n  onClose\n}) => {\n  _s();\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        onClose();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [duration, onClose]);\n  if (!message) return null;\n  const getNotificationClass = () => {\n    switch (type) {\n      case 'success':\n        return 'notification-success';\n      case 'error':\n        return 'notification-error';\n      case 'warning':\n        return 'notification-warning';\n      case 'info':\n      default:\n        return 'notification-info';\n    }\n  };\n  const getIcon = () => {\n    switch (type) {\n      case 'success':\n        return '✅';\n      case 'error':\n        return '❌';\n      case 'warning':\n        return '⚠️';\n      case 'info':\n      default:\n        return 'ℹ️';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `notification ${getNotificationClass()}`,\n    style: {\n      position: 'fixed',\n      top: '20px',\n      right: '20px',\n      minWidth: '300px',\n      maxWidth: '500px',\n      zIndex: 1000,\n      boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n      animation: 'slideIn 0.3s ease-out'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '1.2rem'\n        },\n        children: getIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          flex: 1\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"notification-close\",\n        style: {\n          background: 'none',\n          border: 'none',\n          fontSize: '1.2rem',\n          cursor: 'pointer',\n          color: 'inherit',\n          padding: '0.25rem',\n          borderRadius: '50%',\n          width: '24px',\n          height: '24px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationToast, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = NotificationToast;\nexport default NotificationToast;\nvar _c;\n$RefreshReg$(_c, \"NotificationToast\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","NotificationToast","message","type","duration","onClose","_s","timer","setTimeout","clearTimeout","getNotificationClass","getIcon","className","style","position","top","right","minWidth","maxWidth","zIndex","boxShadow","animation","children","display","alignItems","gap","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","flex","onClick","background","border","cursor","color","padding","borderRadius","width","height","justifyContent","_c","$RefreshReg$"],"sources":["/Users/thurgarajinathan/Documents/Trashcollection/src/components/NotificationToast.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst NotificationToast = ({ \n  message, \n  type = 'info', \n  duration = 5000, \n  onClose \n}) => {\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        onClose();\n      }, duration);\n\n      return () => clearTimeout(timer);\n    }\n  }, [duration, onClose]);\n\n  if (!message) return null;\n\n  const getNotificationClass = () => {\n    switch (type) {\n      case 'success': return 'notification-success';\n      case 'error': return 'notification-error';\n      case 'warning': return 'notification-warning';\n      case 'info':\n      default: return 'notification-info';\n    }\n  };\n\n  const getIcon = () => {\n    switch (type) {\n      case 'success': return '✅';\n      case 'error': return '❌';\n      case 'warning': return '⚠️';\n      case 'info':\n      default: return 'ℹ️';\n    }\n  };\n\n  return (\n    <div \n      className={`notification ${getNotificationClass()}`}\n      style={{\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        minWidth: '300px',\n        maxWidth: '500px',\n        zIndex: 1000,\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n        animation: 'slideIn 0.3s ease-out'\n      }}\n    >\n      <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n        <span style={{ fontSize: '1.2rem' }}>{getIcon()}</span>\n        <span style={{ flex: 1 }}>{message}</span>\n        <button\n          onClick={onClose}\n          className=\"notification-close\"\n          style={{\n            background: 'none',\n            border: 'none',\n            fontSize: '1.2rem',\n            cursor: 'pointer',\n            color: 'inherit',\n            padding: '0.25rem',\n            borderRadius: '50%',\n            width: '24px',\n            height: '24px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          ×\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationToast;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,OAAO;EACPC,IAAI,GAAG,MAAM;EACbC,QAAQ,GAAG,IAAI;EACfC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJR,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,GAAG,CAAC,EAAE;MAChB,MAAMG,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BH,OAAO,CAAC,CAAC;MACX,CAAC,EAAED,QAAQ,CAAC;MAEZ,OAAO,MAAMK,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACH,QAAQ,EAAEC,OAAO,CAAC,CAAC;EAEvB,IAAI,CAACH,OAAO,EAAE,OAAO,IAAI;EAEzB,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjC,QAAQP,IAAI;MACV,KAAK,SAAS;QAAE,OAAO,sBAAsB;MAC7C,KAAK,OAAO;QAAE,OAAO,oBAAoB;MACzC,KAAK,SAAS;QAAE,OAAO,sBAAsB;MAC7C,KAAK,MAAM;MACX;QAAS,OAAO,mBAAmB;IACrC;EACF,CAAC;EAED,MAAMQ,OAAO,GAAGA,CAAA,KAAM;IACpB,QAAQR,IAAI;MACV,KAAK,SAAS;QAAE,OAAO,GAAG;MAC1B,KAAK,OAAO;QAAE,OAAO,GAAG;MACxB,KAAK,SAAS;QAAE,OAAO,IAAI;MAC3B,KAAK,MAAM;MACX;QAAS,OAAO,IAAI;IACtB;EACF,CAAC;EAED,oBACEH,OAAA;IACEY,SAAS,EAAE,gBAAgBF,oBAAoB,CAAC,CAAC,EAAG;IACpDG,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,MAAM;MACXC,KAAK,EAAE,MAAM;MACbC,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,2BAA2B;MACtCC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,eAEFtB,OAAA;MAAKa,KAAK,EAAE;QAAEU,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACnEtB,OAAA;QAAMa,KAAK,EAAE;UAAEa,QAAQ,EAAE;QAAS,CAAE;QAAAJ,QAAA,EAAEX,OAAO,CAAC;MAAC;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvD9B,OAAA;QAAMa,KAAK,EAAE;UAAEkB,IAAI,EAAE;QAAE,CAAE;QAAAT,QAAA,EAAEpB;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1C9B,OAAA;QACEgC,OAAO,EAAE3B,OAAQ;QACjBO,SAAS,EAAC,oBAAoB;QAC9BC,KAAK,EAAE;UACLoB,UAAU,EAAE,MAAM;UAClBC,MAAM,EAAE,MAAM;UACdR,QAAQ,EAAE,QAAQ;UAClBS,MAAM,EAAE,SAAS;UACjBC,KAAK,EAAE,SAAS;UAChBC,OAAO,EAAE,SAAS;UAClBC,YAAY,EAAE,KAAK;UACnBC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdjB,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBiB,cAAc,EAAE;QAClB,CAAE;QAAAnB,QAAA,EACH;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9EIL,iBAAiB;AAAAyC,EAAA,GAAjBzC,iBAAiB;AAgFvB,eAAeA,iBAAiB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}